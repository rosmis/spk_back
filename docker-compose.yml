services:
    web:
        build:
            context: ./
            dockerfile: ./.docker/Dockerfile.dev
        volumes:
            - './.env:/var/www/html/.env'
            - .:/app
            - caddy_data:/data
            - caddy_config:/config
        tty: true
        ports:
            - '80:80'
        networks:
            - laravel_network
        depends_on:
          db:
              condition: service_healthy

#    queue:
#        build:
#            context: ./
#            dockerfile: ./.docker/Dockerfile.dev
#        volumes:
#            - './.env:/var/www/html/.env'
#            - .:/app
#        networks:
#            - laravel_network
#        depends_on:
#          web:
#              condition: service_healthy
#        tty: true
#        entrypoint: ["/queue-entrypoint.sh"]
    db:
        image: mysql/mysql-server:8.0
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - 'sail-mysql:/var/lib/mysql'
        networks:
            - laravel_network
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - -p${DB_PASSWORD}
            retries: 3
            timeout: 5s
    redis:
        image: redis:latest
        ports:
            - "6379:6379"
        networks:
            - laravel_network
        volumes:
            - redis_data:/data
networks:
    laravel_network:
        driver: bridge

volumes:
    sail-mysql:
    caddy_data:
    caddy_config:
    redis_data: