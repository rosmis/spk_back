services:
    watchtower:
        image: containrrr/watchtower
        command:
            - "--label-enable"
            - "--interval"
            - "30"
            - "--rolling-restart"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        reverse-proxy:
            image: traefik:v3.1
            command:
                - "--providers.docker"
                - "--providers.docker.exposedbydefault=false"
                - "--entryPoints.websecure.address=:443"
                - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
                - "--certificatesresolvers.myresolver.acme.email=rosmis123@gmail.com"
                - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
                - "--entrypoints.web.address=:80"
                - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
                - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            ports:
                - "80:80"
                - "443:443"
            volumes:
                - letsencrypt:/letsencrypt
                - /var/run/docker.sock:/var/run/docker.sock
    spk_api:
        image: ghcr.io/rosmis/spk_back/spk_api:dev
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.spk_api.rule=Host(`admin.scarpackage.com`)"
            - "traefik.http.routers.spk_api.entrypoints=websecure"
            - "traefik.http.routers.spk_api.tls.certresolver=myresolver"
            - "com.centurylinklabs.watchtower.enable=true"
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - './.env:/var/www/html/.env:ro'
        env_file:
            - ./.env
        networks:
            - sail
        deploy:
            mode: replicated
            replicas: 3
        restart: always
        depends_on:
            mysql:
                condition: service_healthy
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
